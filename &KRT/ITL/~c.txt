v^~:v~t
l`sh λertcal λrchive
static void Main(string[] args)
{
    if (args.Length == 0 || args.Length > 2 ||
        args[0] == "-?" || args[0] == "/?")
    {
        Usage();
        return;
    }

    String fileName = args[0];
    bool injectFaultMode = args.Length > 1;
    if (!injectFaultMode)
    {
        _printToConsole = true;
        // ViewInHex(fileName);
    }
    else
    {
        Console.WriteLine("Injecting faults - watch handle count in perfmon (press Ctrl-C when done)");
        int numIterations = 0;
        while (true)
        {
            _workerStarted = false;
            Thread t = new Thread(new ParameterizedThreadStart(ViewInHex));
            t.Start(fileName);
            Thread.Sleep(1);
            while (!_workerStarted)
            {
                Thread.Sleep(0);
            }
            t.Abort();  // Normal applications should not do this.
            numIterations++;
            if (numIterations % 10 == 0)
                GC.Collect();
            if (numIterations % 10000 == 0)
                Console.WriteLine(numIterations);
        }
    }
}

λert1cal-<~er en nr
  ++ "inline variant:union:C++17
  -/++/-
  -/++/-
  жж "unsafe fixed String.Format 
  "h'bit
  
  fяs
  copilet
    public virtual string? ToString();
    public static implicit operator ReadOnlySpan<T>(T[]? array);
  unio u慢n ялm5w~'+x
xrc-<